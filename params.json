{
  "name": "Unobtainium",
  "tagline": "Obtain the unobtainable: test code covering multiple platforms",
  "body": "# unobtainium\r\n*Obtain the unobtainable: test code covering multiple platforms*\r\n\r\nUnobtainium wraps [Selenium](https://github.com/SeleniumHQ/selenium) and\r\n[Appium](https://github.com/appium/ruby_lib) in a simple driver abstraction\r\nso that test code can more easily cover:\r\n\r\n  - Desktop browsers\r\n  - Mobile browsers\r\n  - Mobile apps\r\n\r\nThe gem also wraps [PhantomJS](http://phantomjs.org/) for headless testing.\r\n\r\n# Drivers & Driver Modules\r\n\r\n- [unobtainium-nokogiri](https://github.com/jfinkhaeuser/unobtainium-nokogiri) is\r\n  a nokogiri-based driver for entirely browserless access to XML and HTML files\r\n  and pages.\r\n- [unobtainium-faraday](https://github.com/jfinkhaeuser/unobtainium-faraday) is\r\n  a faraday-based driver for dealing with RESTish APIs.\r\n- [unobtainium-kramdown](https://github.com/jfinkhaeuser/unobtainium-kramdown) is\r\n  an open-uri-based driver for dealing with Markdown structured text.\r\n- [unobtainium-multifind](https://github.com/jfinkhaeuser/unobtainium-multifind)\r\n  is a module providing a `#multifind` function for searching for multiple elements\r\n  at the same time.\r\n- [unobtainium-multiwait](https://github.com/jfinkhaeuser/unobtainium-multiwait)\r\n  based on `multifind`, simplifies waiting for an element to appear.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}